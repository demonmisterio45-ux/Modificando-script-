local library = loadstring(game:HttpGet("https://github.com/demonmisterio45-ux/Library-nueva/blob/main/Da%20hood", true))()
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local VirtualInputManager = game:GetService("VirtualInputManager")
local player = Players.LocalPlayer
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local VirtualUser = game:GetService("VirtualUser")
local VirtualInputManager = game:GetService("VirtualInputManager")

local Player = Players.LocalPlayer

local window = library:AddWindow("Pheonix Hub Rework", {
    main_color = Color3.fromRGB(255, 0, 0),
    min_size = Vector2.new(660, 660),
    can_resize = false,
})

local Calculadora = window:AddTab("Calculadora", Color3.fromRGB(200, 100, 100))

local baseStrength = 0
local resultadoLabels = {}

Calculadora:AddLabel("Pack Damage Calculator")

Calculadora:AddTextBox("Fuerza Base (ej: 1.27Qa, T, B)", function(text)
    local unidades = { ["T"] = 1e12, ["Q"] = 1e15, ["B"] = 1e9 }
    text = text:upper()
    for u, m in pairs(unidades) do
        if text:find(u) then
            local num = tonumber(text:match("(%d+%.?%d*)"))
            if num then
                baseStrength = num * m
                return
            end
        end
    end
    baseStrength = tonumber(text:match("(%d+%.?%d*)")) or 0
end)

local mensajeLabel = Calculadora:AddLabel("") -- Label para mostrar errores

-- Crear los 8 labels una vez, en orden fijo
for i = 1, 8 do
    resultadoLabels[i] = Calculadora:AddLabel(string.format("%d pack(s): -", i))
end

Calculadora:AddButton("Calcular", function()
    if baseStrength <= 0 then
        mensajeLabel.Text = "Ingresa un valor v치lido."
        for i = 1, 8 do
            resultadoLabels[i].Text = string.format("%d pack(s): -", i)
        end
        return
    end

    mensajeLabel.Text = ""

    local danoAjustado = baseStrength * 0.10
    local incremento = 0.335

    for pack = 1, 8 do
        local mult = 1 + (pack * incremento)
        local valor = danoAjustado * mult

        local disp
        if valor >= 1e15 then
            disp = string.format("%.3f Qa", valor / 1e15)
        elseif valor >= 1e12 then
            disp = string.format("%.2f T", valor / 1e12)
        elseif valor >= 1e9 then
            disp = string.format("%.2f B", valor / 1e9)
        else
            disp = tostring(math.floor(valor))
        end

        resultadoLabels[pack].Text = string.format("%d pack(s): %s", pack, disp)
    end
end)

-- 游늷 Pesta침a Calculadora 2 integrada en el men칰
local Calculadora2 = window:AddTab("Calculadora 2", Color3.fromRGB(200, 100, 100))

local baseDurabilidad = 0
local resultadoLabels = {}
local mensajeLabel = nil

Calculadora2:AddLabel("Pack Durability Calculator")

-- Campo de entrada para la durabilidad base
Calculadora2:AddTextBox("Durabilidad base (ej: 1.27Qa, T, B)", function(text)
    local unidades = { ["T"] = 1e12, ["Q"] = 1e15, ["B"] = 1e9 }
    text = text:upper()
    for u, m in pairs(unidades) do
        if text:find(u) then
            local num = tonumber(text:match("(%d+%.?%d*)"))
            if num then
                baseDurabilidad = num * m
                return
            end
        end
    end
    baseDurabilidad = tonumber(text:match("(%d+%.?%d*)")) or 0
end)

-- Label para mensajes de error
mensajeLabel = Calculadora2:AddLabel("")

-- Crear una vez los labels para resultados (fijos en su lugar)
for i = 1, 8 do
    resultadoLabels[i] = Calculadora2:AddLabel(string.format("%d pack(s): -", i))
end

-- Bot칩n para calcular
Calculadora2:AddButton("Calcular", function()
    if baseDurabilidad <= 0 then
        mensajeLabel.Text = "Ingresa un valor v치lido."
        for i = 1, 8 do
            resultadoLabels[i].Text = string.format("%d pack(s): -", i)
        end
        return
    end

    mensajeLabel.Text = ""

    local incremento = 0.335
    local adicional = 1.5 -- Aumento del 50% como en tu script original

    for pack = 1, 8 do
        local mult = 1 + (pack * incremento)
        local valor = baseDurabilidad * mult * adicional

        local disp
        if valor >= 1e15 then
            disp = string.format("%.3f Qa", valor / 1e15)
        elseif valor >= 1e12 then
            disp = string.format("%.2f T", valor / 1e12)
        elseif valor >= 1e9 then
            disp = string.format("%.2f B", valor / 1e9)
        else
            disp = tostring(math.floor(valor))
        end

        resultadoLabels[pack].Text = string.format("%d pack(s): %s", pack, disp)
    end
end)
mainTab:Show()
